{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyApps\\\\COMP354PROJECT\\\\calculator-app\\\\src\\\\Pages\\\\Calculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Display from \"../Components/Display\";\nimport Button from \"../Components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [functions, setFunctions] = useState({});\n  const [functionInput, setFunctionInput] = useState(\"\");\n  const handleButtonClick = value => {\n    if (value === \"=\") {\n      try {\n        const evaluatedResult = eval(input); // Be cautious with eval for user-generated code\n        setResult(evaluatedResult.toString());\n      } catch (error) {\n        setResult(\"Error\");\n      }\n    } else if (value === \"C\") {\n      setInput(\"\");\n      setResult(\"\");\n    } else {\n      setInput(input + value);\n    }\n  };\n  const handleFunctionChange = e => {\n    setFunctionInput(e.target.value);\n  };\n  const handleFunctionSubmit = () => {\n    const [name, expression] = functionInput.split(\"=\");\n    if (name && expression) {\n      const functionName = name.trim();\n      try {\n        const parsedFunction = new Function(\"x\", `return ${expression}`);\n        setFunctions(prevFunctions => ({\n          ...prevFunctions,\n          [functionName]: parsedFunction\n        }));\n        setFunctionInput(\"\");\n      } catch (error) {\n        setResult(\"Invalid Function\");\n      }\n    }\n  };\n  const handleFunctionCall = funcName => {\n    if (functions[funcName]) {\n      const xValue = parseFloat(input);\n      if (!isNaN(xValue)) {\n        const funcResult = functions[funcName](xValue);\n        setResult(funcResult.toString());\n      } else {\n        setResult(\"Invalid Input for Function\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      input: input,\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [[\"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"].map(button => /*#__PURE__*/_jsxDEV(Button, {\n        label: button,\n        onClick: () => handleButtonClick(button)\n      }, button, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"C\",\n        onClick: () => handleButtonClick(\"C\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), Object.keys(functions).map(funcName => /*#__PURE__*/_jsxDEV(Button, {\n        label: funcName,\n        onClick: () => handleFunctionCall(funcName)\n      }, funcName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: functionInput,\n        onChange: handleFunctionChange,\n        placeholder: \"Define function (e.g., f(x) = x * 2)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFunctionSubmit,\n        children: \"Add Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"uB4jq+bQaYSi88EjYAd3ztGPYvw=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","Display","Button","jsxDEV","_jsxDEV","Calculator","_s","input","setInput","result","setResult","functions","setFunctions","functionInput","setFunctionInput","handleButtonClick","value","evaluatedResult","eval","toString","error","handleFunctionChange","e","target","handleFunctionSubmit","name","expression","split","functionName","trim","parsedFunction","Function","prevFunctions","handleFunctionCall","funcName","xValue","parseFloat","isNaN","funcResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","button","label","onClick","Object","keys","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/MyApps/COMP354PROJECT/calculator-app/src/Pages/Calculator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Display from \"../Components/Display\";\r\nimport Button from \"../Components/Button\";\r\n\r\ninterface Functions {\r\n  [key: string]: (x: number) => number;\r\n}\r\n\r\nconst Calculator: React.FC = () => {\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [result, setResult] = useState<string>(\"\");\r\n  const [functions, setFunctions] = useState<Functions>({});\r\n  const [functionInput, setFunctionInput] = useState<string>(\"\");\r\n\r\n  const handleButtonClick = (value: string) => {\r\n    if (value === \"=\") {\r\n      try {\r\n        const evaluatedResult = eval(input); // Be cautious with eval for user-generated code\r\n        setResult(evaluatedResult.toString());\r\n      } catch (error) {\r\n        setResult(\"Error\");\r\n      }\r\n    } else if (value === \"C\") {\r\n      setInput(\"\");\r\n      setResult(\"\");\r\n    } else {\r\n      setInput(input + value);\r\n    }\r\n  };\r\n\r\n  const handleFunctionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFunctionInput(e.target.value);\r\n  };\r\n\r\n  const handleFunctionSubmit = () => {\r\n    const [name, expression] = functionInput.split(\"=\");\r\n    if (name && expression) {\r\n      const functionName = name.trim();\r\n      try {\r\n        const parsedFunction = new Function(\"x\", `return ${expression}`);\r\n        setFunctions((prevFunctions) => ({ ...prevFunctions, [functionName]: parsedFunction }));\r\n        setFunctionInput(\"\");\r\n      } catch (error) {\r\n        setResult(\"Invalid Function\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFunctionCall = (funcName: string) => {\r\n    if (functions[funcName]) {\r\n      const xValue = parseFloat(input);\r\n      if (!isNaN(xValue)) {\r\n        const funcResult = functions[funcName](xValue);\r\n        setResult(funcResult.toString());\r\n      } else {\r\n        setResult(\"Invalid Input for Function\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Display input={input} result={result} />\r\n      <div className=\"buttons\">\r\n        {[\"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"].map((button) => (\r\n          <Button key={button} label={button} onClick={() => handleButtonClick(button)} />\r\n        ))}\r\n        <Button label=\"C\" onClick={() => handleButtonClick(\"C\")} />\r\n        {Object.keys(functions).map((funcName) => (\r\n          <Button key={funcName} label={funcName} onClick={() => handleFunctionCall(funcName)} />\r\n        ))}\r\n      </div>\r\n      <div className=\"function-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={functionInput}\r\n          onChange={handleFunctionChange}\r\n          placeholder=\"Define function (e.g., f(x) = x * 2)\"\r\n        />\r\n        <button onClick={handleFunctionSubmit}>Add Function</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}